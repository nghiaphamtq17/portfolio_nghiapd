name: Deploy to VPS

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run linting
      run: npm run lint
    
    - name: Run type checking
      run: npm run type-check
    
    - name: Build application
      run: npm run build
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-files
        path: .next/
        retention-days: 1

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build application
      run: npm run build
    
    - name: Deploy to VPS
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USERNAME }}
        key: ${{ secrets.VPS_SSH_KEY }}
        port: ${{ secrets.VPS_PORT }}
        timeout: 60s
        command_timeout: 10m
        script: |
          echo "🚀 Starting deployment..."
          echo "Current directory: $(pwd)"
          echo "User: $(whoami)"
          echo "Date: $(date)"
          
          # Install Docker if not exists
          if ! command -v docker &> /dev/null; then
            echo "📦 Installing Docker..."
            curl -fsSL https://get.docker.com -o get-docker.sh
            sudo sh get-docker.sh
            sudo usermod -aG docker $USER
            echo "✅ Docker installed successfully!"
          else
            echo "✅ Docker already installed"
          fi
          
          # Install Docker Compose if not exists
          if ! command -v docker-compose &> /dev/null; then
            echo "📦 Installing Docker Compose..."
            sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
            sudo chmod +x /usr/local/bin/docker-compose
            echo "✅ Docker Compose installed successfully!"
          else
            echo "✅ Docker Compose already installed"
          fi
          
          # Create directory if not exists
          if [ ! -d "/var/www" ]; then
            echo "📁 Creating /var/www directory..."
            sudo mkdir -p /var/www
            sudo chown $USER:$USER /var/www
          fi
          
          # Clone repository if not exists
          if [ ! -d "/var/www/portfolio_nghiapd" ]; then
            echo "📥 Cloning repository..."
            cd /var/www
            git clone https://github.com/YOUR_USERNAME/portfolio_nghiapd.git
            echo "✅ Repository cloned successfully!"
          else
            echo "✅ Repository already exists"
          fi
          
          cd /var/www/portfolio_nghiapd
          
          # Pull latest changes
          echo "📥 Pulling latest changes..."
          git pull origin main
          
          # Stop existing containers
          echo "🐳 Stopping existing containers..."
          docker-compose down || true
          
          # Build and start new containers
          echo "🔨 Building and starting new containers..."
          docker-compose up -d --build
          
          # Clean up old images
          echo "🧹 Cleaning up old images..."
          docker system prune -f
          
          echo "✅ Deployment completed!"
          echo "Checking container status..."
          docker-compose ps
